{"ast":null,"code":"import * as React from 'react';\nimport useLayoutEffect from '@react-hook/passive-layout-effect';\n\nfunction useEvent(target, type, listener, cleanup) {\n  var storedListener = React.useRef(listener);\n  var storedCleanup = React.useRef(cleanup);\n  useLayoutEffect(function () {\n    storedListener.current = listener;\n    storedCleanup.current = cleanup;\n  });\n  useLayoutEffect(function () {\n    var targetEl = target && 'current' in target ? target.current : target;\n    if (!targetEl) return;\n    var didUnsubscribe = 0;\n\n    function listener() {\n      if (didUnsubscribe) return;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      storedListener.current.apply(this, args);\n    }\n\n    targetEl.addEventListener(type, listener);\n    var cleanup = storedCleanup.current;\n    return function () {\n      didUnsubscribe = 1;\n      targetEl.removeEventListener(type, listener);\n      cleanup && cleanup();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [target, type]);\n}\n\nexport default useEvent;","map":{"version":3,"sources":["/Users/huey/Projects/personal-projects/wavez/node_modules/@react-hook/event/dist/module/index.js"],"names":["React","useLayoutEffect","useEvent","target","type","listener","cleanup","storedListener","useRef","storedCleanup","current","targetEl","didUnsubscribe","args","apply","addEventListener","removeEventListener"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;;AAEA,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,IAA1B,EAAgCC,QAAhC,EAA0CC,OAA1C,EAAmD;AACjD,MAAMC,cAAc,GAAGP,KAAK,CAACQ,MAAN,CAAaH,QAAb,CAAvB;AACA,MAAMI,aAAa,GAAGT,KAAK,CAACQ,MAAN,CAAaF,OAAb,CAAtB;AACAL,EAAAA,eAAe,CAAC,YAAM;AACpBM,IAAAA,cAAc,CAACG,OAAf,GAAyBL,QAAzB;AACAI,IAAAA,aAAa,CAACC,OAAd,GAAwBJ,OAAxB;AACD,GAHc,CAAf;AAIAL,EAAAA,eAAe,CAAC,YAAM;AACpB,QAAMU,QAAQ,GAAGR,MAAM,IAAI,aAAaA,MAAvB,GAAgCA,MAAM,CAACO,OAAvC,GAAiDP,MAAlE;AACA,QAAI,CAACQ,QAAL,EAAe;AACf,QAAIC,cAAc,GAAG,CAArB;;AAEA,aAASP,QAAT,GAA2B;AACzB,UAAIO,cAAJ,EAAoB;;AADK,wCAANC,IAAM;AAANA,QAAAA,IAAM;AAAA;;AAEzBN,MAAAA,cAAc,CAACG,OAAf,CAAuBI,KAAvB,CAA6B,IAA7B,EAAmCD,IAAnC;AACD;;AAEDF,IAAAA,QAAQ,CAACI,gBAAT,CAA0BX,IAA1B,EAAgCC,QAAhC;AACA,QAAMC,OAAO,GAAGG,aAAa,CAACC,OAA9B;AACA,WAAO,YAAM;AACXE,MAAAA,cAAc,GAAG,CAAjB;AACAD,MAAAA,QAAQ,CAACK,mBAAT,CAA6BZ,IAA7B,EAAmCC,QAAnC;AACAC,MAAAA,OAAO,IAAIA,OAAO,EAAlB;AACD,KAJD,CAZoB,CAgBjB;AACJ,GAjBc,EAiBZ,CAACH,MAAD,EAASC,IAAT,CAjBY,CAAf;AAkBD;;AAED,eAAeF,QAAf","sourcesContent":["import * as React from 'react';\nimport useLayoutEffect from '@react-hook/passive-layout-effect';\n\nfunction useEvent(target, type, listener, cleanup) {\n  const storedListener = React.useRef(listener);\n  const storedCleanup = React.useRef(cleanup);\n  useLayoutEffect(() => {\n    storedListener.current = listener;\n    storedCleanup.current = cleanup;\n  });\n  useLayoutEffect(() => {\n    const targetEl = target && 'current' in target ? target.current : target;\n    if (!targetEl) return;\n    let didUnsubscribe = 0;\n\n    function listener(...args) {\n      if (didUnsubscribe) return;\n      storedListener.current.apply(this, args);\n    }\n\n    targetEl.addEventListener(type, listener);\n    const cleanup = storedCleanup.current;\n    return () => {\n      didUnsubscribe = 1;\n      targetEl.removeEventListener(type, listener);\n      cleanup && cleanup();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [target, type]);\n}\n\nexport default useEvent;"]},"metadata":{},"sourceType":"module"}