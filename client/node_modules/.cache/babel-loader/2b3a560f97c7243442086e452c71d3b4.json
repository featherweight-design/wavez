{"ast":null,"code":"import _slicedToArray from \"/Users/huey/Projects/personal-projects/wavez/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useDebounce } from '@react-hook/debounce';\nimport useEvent from '@react-hook/event';\nvar emptyObj = {};\nvar win = typeof window === 'undefined' ? null : window;\n\nvar getSize = function getSize() {\n  return [document.documentElement.clientWidth, document.documentElement.clientHeight];\n};\n\nexport var useWindowSize = function useWindowSize() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : emptyObj;\n  var wait = options.wait,\n      leading = options.leading,\n      _options$initialWidth = options.initialWidth,\n      initialWidth = _options$initialWidth === void 0 ? 0 : _options$initialWidth,\n      _options$initialHeigh = options.initialHeight,\n      initialHeight = _options$initialHeigh === void 0 ? 0 : _options$initialHeigh;\n\n  var _useDebounce = useDebounce(\n  /* istanbul ignore next */\n  typeof document === 'undefined' ? [initialWidth, initialHeight] : getSize, wait, leading),\n      _useDebounce2 = _slicedToArray(_useDebounce, 2),\n      size = _useDebounce2[0],\n      setDebouncedSize = _useDebounce2[1];\n\n  var setSize = function setSize() {\n    return setDebouncedSize(getSize);\n  };\n\n  useEvent(win, 'resize', setSize);\n  useEvent(win, 'orientationchange', setSize);\n  return size;\n};\nexport var useWindowHeight = function useWindowHeight(options) {\n  return useWindowSize(options)[1];\n};\nexport var useWindowWidth = function useWindowWidth(options) {\n  return useWindowSize(options)[0];\n};","map":{"version":3,"sources":["/Users/huey/Projects/personal-projects/wavez/node_modules/@react-hook/window-size/dist/module/index.js"],"names":["useDebounce","useEvent","emptyObj","win","window","getSize","document","documentElement","clientWidth","clientHeight","useWindowSize","options","wait","leading","initialWidth","initialHeight","size","setDebouncedSize","setSize","useWindowHeight","useWindowWidth"],"mappings":";AAAA,SAASA,WAAT,QAA4B,sBAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,IAAMC,QAAQ,GAAG,EAAjB;AACA,IAAMC,GAAG,GAAG,OAAOC,MAAP,KAAkB,WAAlB,GAAgC,IAAhC,GAAuCA,MAAnD;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAM,CAACC,QAAQ,CAACC,eAAT,CAAyBC,WAA1B,EAAuCF,QAAQ,CAACC,eAAT,CAAyBE,YAAhE,CAAN;AAAA,CAAhB;;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAwB;AAAA,MAAvBC,OAAuB,uEAAbT,QAAa;AACnD,MACEU,IADF,GAKID,OALJ,CACEC,IADF;AAAA,MAEEC,OAFF,GAKIF,OALJ,CAEEE,OAFF;AAAA,8BAKIF,OALJ,CAGEG,YAHF;AAAA,MAGEA,YAHF,sCAGiB,CAHjB;AAAA,8BAKIH,OALJ,CAIEI,aAJF;AAAA,MAIEA,aAJF,sCAIkB,CAJlB;;AAMA,qBAAiCf,WAAW;AAC5C;AACA,SAAOM,QAAP,KAAoB,WAApB,GAAkC,CAACQ,YAAD,EAAeC,aAAf,CAAlC,GAAkEV,OAFtB,EAE+BO,IAF/B,EAEqCC,OAFrC,CAA5C;AAAA;AAAA,MAAOG,IAAP;AAAA,MAAaC,gBAAb;;AAIA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,WAAMD,gBAAgB,CAACZ,OAAD,CAAtB;AAAA,GAAhB;;AAEAJ,EAAAA,QAAQ,CAACE,GAAD,EAAM,QAAN,EAAgBe,OAAhB,CAAR;AACAjB,EAAAA,QAAQ,CAACE,GAAD,EAAM,mBAAN,EAA2Be,OAA3B,CAAR;AACA,SAAOF,IAAP;AACD,CAhBM;AAiBP,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAAR,OAAO;AAAA,SAAID,aAAa,CAACC,OAAD,CAAb,CAAuB,CAAvB,CAAJ;AAAA,CAA/B;AACP,OAAO,IAAMS,cAAc,GAAG,SAAjBA,cAAiB,CAAAT,OAAO;AAAA,SAAID,aAAa,CAACC,OAAD,CAAb,CAAuB,CAAvB,CAAJ;AAAA,CAA9B","sourcesContent":["import { useDebounce } from '@react-hook/debounce';\nimport useEvent from '@react-hook/event';\nconst emptyObj = {};\nconst win = typeof window === 'undefined' ? null : window;\n\nconst getSize = () => [document.documentElement.clientWidth, document.documentElement.clientHeight];\n\nexport const useWindowSize = (options = emptyObj) => {\n  const {\n    wait,\n    leading,\n    initialWidth = 0,\n    initialHeight = 0\n  } = options;\n  const [size, setDebouncedSize] = useDebounce(\n  /* istanbul ignore next */\n  typeof document === 'undefined' ? [initialWidth, initialHeight] : getSize, wait, leading);\n\n  const setSize = () => setDebouncedSize(getSize);\n\n  useEvent(win, 'resize', setSize);\n  useEvent(win, 'orientationchange', setSize);\n  return size;\n};\nexport const useWindowHeight = options => useWindowSize(options)[1];\nexport const useWindowWidth = options => useWindowSize(options)[0];"]},"metadata":{},"sourceType":"module"}