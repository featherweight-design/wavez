{"ast":null,"code":"import { useThrottle } from '@react-hook/throttle';\nimport useEvent from '@react-hook/event';\nvar win = typeof window === 'undefined' ? null : window;\n\nvar getScrollY = function getScrollY() {\n  return win.scrollY !== void 0 ? win.scrollY : win.pageYOffset === void 0 ? 0 : win.pageYOffset;\n};\n\nexport var useWindowScroll = function useWindowScroll() {\n  var fps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;\n  var state = useThrottle(typeof window === 'undefined' ? 0 : getScrollY, fps, true);\n  useEvent(win, 'scroll', function () {\n    return state[1](getScrollY());\n  });\n  return state[0];\n};\nexport default useWindowScroll;","map":{"version":3,"sources":["/Users/huey/Projects/personal-projects/wavez/node_modules/@react-hook/window-scroll/dist/module/index.js"],"names":["useThrottle","useEvent","win","window","getScrollY","scrollY","pageYOffset","useWindowScroll","fps","state"],"mappings":"AAAA,SAASA,WAAT,QAA4B,sBAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,IAAMC,GAAG,GAAG,OAAOC,MAAP,KAAkB,WAAlB,GAAgC,IAAhC,GAAuCA,MAAnD;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAMF,GAAG,CAACG,OAAJ,KAAgB,KAAK,CAArB,GAAyBH,GAAG,CAACG,OAA7B,GAAuCH,GAAG,CAACI,WAAJ,KAAoB,KAAK,CAAzB,GAA6B,CAA7B,GAAiCJ,GAAG,CAACI,WAAlF;AAAA,CAAnB;;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAc;AAAA,MAAbC,GAAa,uEAAP,EAAO;AAC3C,MAAMC,KAAK,GAAGT,WAAW,CAAC,OAAOG,MAAP,KAAkB,WAAlB,GAAgC,CAAhC,GAAoCC,UAArC,EAAiDI,GAAjD,EAAsD,IAAtD,CAAzB;AACAP,EAAAA,QAAQ,CAACC,GAAD,EAAM,QAAN,EAAgB;AAAA,WAAMO,KAAK,CAAC,CAAD,CAAL,CAASL,UAAU,EAAnB,CAAN;AAAA,GAAhB,CAAR;AACA,SAAOK,KAAK,CAAC,CAAD,CAAZ;AACD,CAJM;AAKP,eAAeF,eAAf","sourcesContent":["import { useThrottle } from '@react-hook/throttle';\nimport useEvent from '@react-hook/event';\nconst win = typeof window === 'undefined' ? null : window;\n\nconst getScrollY = () => win.scrollY !== void 0 ? win.scrollY : win.pageYOffset === void 0 ? 0 : win.pageYOffset;\n\nexport const useWindowScroll = (fps = 30) => {\n  const state = useThrottle(typeof window === 'undefined' ? 0 : getScrollY, fps, true);\n  useEvent(win, 'scroll', () => state[1](getScrollY()));\n  return state[0];\n};\nexport default useWindowScroll;"]},"metadata":{},"sourceType":"module"}